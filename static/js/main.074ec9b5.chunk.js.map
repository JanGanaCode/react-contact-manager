{"version":3,"sources":["context.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Header","branding","className","Link","to","defaultProps","About","NotFound","TextInputGroup","_ref","name","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","email","phone","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this2","_this$state2","bind","layout_TextInputGroup","EditContact","updateContact","match","params","put","Contact","showContactInfo","onDeleteClick","delete","t0","_this$props$contact","onClick","style","cursor","color","float","marginRight","Contacts","Fragment","contacts_Contact","App","context_Provider","BrowserRouter","layout_Header","Switch","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.074ec9b5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount(){\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: response.data });\n  }\n\n  render(){\n    return(\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-success mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"#/\" className=\"navbar-brand\">{branding}</Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">Contacts <i  className=\"fas fa-list\"></i></Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">Add <i  className=\"fas fa-plus\"></i></Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">About <i  className=\"fas fa-info-circle\"></i></Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: 'My App',\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n}\n\nexport default Header;\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-success\">404</span> page not found :(</h1>\n      <p className=\"lead\">Sorry, this page does not exist</p>\n    </div>\n  )\n}\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  name,\n  label,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input  type={type} \n              className={classnames(\"form-control form-control-lg\", {\n                \"is-invalid\": error\n              })}\n              placeholder={placeholder}\n              name={name}\n              value={value}\n              onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nTextInputGroup.propTypes ={\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from './../../context';\nimport TextInputGroup from './../layout/TextInputGroup';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value});\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if(name === ''){\n      this.setState({\n        errors: { name: 'Name is required'}\n      });\n      return;\n    }\n\n    if(email === ''){\n      this.setState({\n        errors: { email: 'Email is required'}\n      });\n      return;\n    }\n\n    if(phone === ''){\n      this.setState({\n        errors: { phone: 'Phone is required'}\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const response = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n    \n    dispatch({ type: 'ADD_CONTACT', payload: response.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // redirect\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">\n                Add Contact\n              </div>\n              <div className=\"card-body\">\n                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup label=\"Name\"\n                                  name=\"name\"\n                                  placeholder=\"Enter name...\"\n                                  value={name}\n                                  onChange={this.onChange}\n                                  error={errors.name}\n                  />\n                  <TextInputGroup label=\"Email\"\n                                  name=\"email\"\n                                  placeholder=\"Enter email...\"\n                                  value={email}\n                                  onChange={this.onChange}\n                                  type=\"email\"\n                                  error={errors.email}\n                  />\n                  <TextInputGroup label=\"Phone\"\n                                  name=\"phone\"\n                                  placeholder=\"Enter phone...\"\n                                  value={phone}\n                                  onChange={this.onChange}\n                                  error={errors.phone}\n                  />\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\n                </form>        \n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from './../../context';\nimport TextInputGroup from './../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  async componentDidMount(){\n    const { id } = this.props.match.params;\n\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n\n    const contact = response.data;\n\n    this.setState({ name: contact.name , email: contact.email, phone: contact.phone })\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value});\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if(name === ''){\n      this.setState({\n        errors: { name: 'Name is required'}\n      });\n      return;\n    }\n\n    if(email === ''){\n      this.setState({\n        errors: { email: 'Email is required'}\n      });\n      return;\n    }\n\n    if(phone === ''){\n      this.setState({\n        errors: { phone: 'Phone is required'}\n      });\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    }\n\n    const { id } = this.props.match.params;\n\n    const response = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: response.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // redirect\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">\n                Edit Contact\n              </div>\n              <div className=\"card-body\">\n                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup label=\"Name\"\n                                  name=\"name\"\n                                  placeholder=\"Enter name...\"\n                                  value={name}\n                                  onChange={this.onChange}\n                                  error={errors.name}\n                  />\n                  <TextInputGroup label=\"Email\"\n                                  name=\"email\"\n                                  placeholder=\"Enter email...\"\n                                  value={email}\n                                  onChange={this.onChange}\n                                  type=\"email\"\n                                  error={errors.email}\n                  />\n                  <TextInputGroup label=\"Phone\"\n                                  name=\"phone\"\n                                  placeholder=\"Enter phone...\"\n                                  value={phone}\n                                  onChange={this.onChange}\n                                  error={errors.phone}\n                  />\n                  <input type=\"submit\" value=\"Save\" className=\"btn btn-light btn-block\"/>\n                </form>        \n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Consumer } from './../../context';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try{\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      \n      dispatch({type: 'DELETE_CONTACT', payload: id})\n    } catch(e) {\n      dispatch({type: 'DELETE_CONTACT', payload: id})\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card card-body mb-3\">\n              <h4>{name} <i onClick={() => {this.setState({ showContactInfo: !this.state.showContactInfo })}} \n                            className=\"fas fa-sort-down\"\n                            style={{cursor: 'pointer'}}>\n                          </i>\n                          <i  className=\"fas fa-times\" \n                              style={{color: 'red', float: 'right', cursor: 'pointer'}}\n                              onClick={this.onDeleteClick.bind(this, id, dispatch)}>\n                          </i>\n                          <Link to={`contact/edit/${id}`}>\n                            <i  className=\"fas fa-pencil-alt\"\n                                style={{color: 'black', float: 'right', cursor: 'pointer', marginRight: '1rem'}}>\n                            </i>\n                          </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">E-mail: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from './../../context';\n\nclass Contacts extends Component {\n  render() {\n    return(\n      <Consumer>\n        {value => {\n          const contacts = value.contacts;\n          return(\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\"><span className=\"text-success\">Contact</span> List</h1>\n              {contacts.map(contact => (\n                <Contact  key={contact.id}\n                          contact={contact}\n                />\n              ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default  Contacts;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from './context';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Contacts from './components/contacts/Contacts';\nimport  'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route path=\"/\" exact component={Contacts}/>\n                <Route path=\"/contact/add\" exact component={AddContact}/>\n                <Route path=\"/contact/edit/:id\" exact component={EditContact}/>\n                <Route path=\"/about\" exact component={About}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}