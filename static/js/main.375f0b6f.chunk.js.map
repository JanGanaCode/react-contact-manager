{"version":3,"sources":["context.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","react_default","a","createElement","props","children","Component","Consumer","Header","branding","className","Link","to","defaultProps","About","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","preventDefault","_this$state","uuid","history","push","_this2","_this$state2","bind","layout_TextInputGroup","Contact","showContactInfo","onDeleteClick","_this$props$contact","onClick","style","cursor","color","float","Contacts","Fragment","map","contacts_Contact","App","context_Provider","HashRouter","layout_Header","Switch","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.375f0b6f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch(action.type){\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      }\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [\n      {\n        id: 1,\n        name: 'John Doe',\n        email: 'john.doe@gmail.com',\n        phone: '555-555-555'\n      },\n      {\n        id: 2,\n        name: 'Jessica Doe',\n        email: 'jessica.doe@gmail.com',\n        phone: '444-444-444'\n      }\n    ],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  render(){\n    return(\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-success mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"#/\" className=\"navbar-brand\">{branding}</Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">Contacts <i  className=\"fas fa-list\"></i></Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">Add <i  className=\"fas fa-plus\"></i></Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">About <i  className=\"fas fa-info-circle\"></i></Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: 'My App',\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n}\n\nexport default Header;\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-success\">404</span> page not found :(</h1>\n      <p className=\"lead\">Sorry, this page does not exist</p>\n    </div>\n  )\n}\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  name,\n  label,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input  type={type} \n              className={classnames(\"form-control form-control-lg\", {\n                \"is-invalid\": error\n              })}\n              placeholder={placeholder}\n              name={name}\n              value={value}\n              onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n}\n\nTextInputGroup.propTypes ={\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react'\nimport { Consumer } from './../../context';\nimport TextInputGroup from './../layout/TextInputGroup';\nimport uuid from 'uuid';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value});\n\n  onSubmit = (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if(name === ''){\n      this.setState({\n        errors: { name: 'Name is required'}\n      });\n      return;\n    }\n\n    if(email === ''){\n      this.setState({\n        errors: { email: 'Email is required'}\n      });\n      return;\n    }\n\n    if(phone === ''){\n      this.setState({\n        errors: { phone: 'Phone is required'}\n      });\n      return;\n    }\n\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone\n    };\n\n    dispatch({ type: 'ADD_CONTACT', payload: newContact });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // redirect\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">\n                Add Contact\n              </div>\n              <div className=\"card-body\">\n                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup label=\"Name\"\n                                  name=\"name\"\n                                  placeholder=\"Enter name...\"\n                                  value={name}\n                                  onChange={this.onChange}\n                                  error={errors.name}\n                  />\n                  <TextInputGroup label=\"Email\"\n                                  name=\"email\"\n                                  placeholder=\"Enter email...\"\n                                  value={email}\n                                  onChange={this.onChange}\n                                  type=\"email\"\n                                  error={errors.email}\n                  />\n                  <TextInputGroup label=\"Phone\"\n                                  name=\"phone\"\n                                  placeholder=\"Enter phone...\"\n                                  value={phone}\n                                  onChange={this.onChange}\n                                  error={errors.phone}\n                  />\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\n                </form>        \n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from './../../context';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = (id, dispatch) => {\n    dispatch({type: 'DELETE_CONTACT', payload: id})\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card card-body mb-3\">\n              <h4>{name} <i onClick={() => {this.setState({ showContactInfo: !this.state.showContactInfo })}} \n                            className=\"fas fa-sort-down\"\n                            style={{cursor: 'pointer'}}>\n                          </i>\n                          <i  className=\"fas fa-times\" \n                              style={{color: 'red', float: 'right', cursor: 'pointer'}}\n                              onClick={this.onDeleteClick.bind(this, id, dispatch)}>\n                          </i>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">E-mail: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from './../../context';\n\nclass Contacts extends Component {\n  render() {\n    return(\n      <Consumer>\n        {value => {\n          const contacts = value.contacts;\n          return(\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\"><span className=\"text-success\">Contact</span> List</h1>\n              {contacts.map(contact => (\n                <Contact  key={contact.id}\n                          contact={contact}\n                />\n              ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default  Contacts;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from './context';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport AddContact from './components/contacts/AddContact';\nimport Contacts from './components/contacts/Contacts';\nimport  'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route path=\"/\" exact component={Contacts}/>\n                <Route path=\"/contact/add\" exact component={AddContact}/>\n                <Route path=\"/about\" exact component={About}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}